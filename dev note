DONE
- column 이름 가져오기 
  . ScheduleDriver (Done)
  . Generate a column query (Done)
  . CourseID 가져오기
    . schdule 만드는 부분에서부터 시작 (X),
    . Schedule class 내부에 직접 변수 생성 필요. --> Schedule 클래스 내에 존재. (Done)

      . Schedule instance를 만드는 곳 확인.--> Assignment에서 가져옴. (Done)
        . 실제 잘 들어왔는지 확인. (X) --> Fix --> Assignment에는 잘 들어감. (Done)
        . Schedule 에는 잘 들어가는지 확인. (위치: TimeUtil) (Done)

        . Assignment에서 courseID 가져와야 함. --> Assignment는 어디서 instantiate 하는지 필요 (Done)
          . Assignment에 courseID 변수 추가하고, 값을 제공. --> sqlData (Done)

  . Data 가져오기 (Type에 따라 다른 모듈) --> (DONE)
    "ID", "USER_ID", "COURSE_ID", "ASSIGNMENT_ID", "START_TIME", "END_TIME", "PRIORITY"
    "INT", "INT",      "INT",        "INT", 	"DATETIME",  "DATETIME", "INT"
    auto, studentID,  courseID,     assignmetnID,   startTime,      endTime, 0

- DateTime의 시간 정보를 String으로 변환하여 DB Schedule table에 삽입. --> (DONE)
  . 2012-05-01 16:07:00 --> (DONE)

- students data를 채워줘야 함. --> (DONE)
- Overlap이 생기는 경우 1시간의 공백이 발생 --> isOverlap 에서 동일한 시간에 끝나고 동일한 시작에
  시작하는 경우 isAfter(), isBefore()가 겹치는 것으로 인정 --> isAfter()는 이미 등록되어 있는
  스케줄에 대해 1분전, isBefore()는 이미 먼저 등록되어 있는 스케줄의 1분 후를 기준으로 비교. --> (DONE)

TODO

ERROR / WARNINGS
- schedules에 null이 포함되어 있음. (schedule이 만들어지는 과정 파악) --> DB에는 일단 빠진 채로 들어감
  --> if (OO == null) 부분부터 거슬러 올라갈 필요
  -->

Unit test for IndivScheduler 작성
- 정해진 course의 assignment만 포함되어 있는지 확인. --> Yes
- generateScheduleTable() 실행 -->

DB / Java implementation in EHE server
- DB setup
- Java source code copy

IndivScheduler 데이터 확인
- 어떤 데이터가 들어있는지 확인 --> No public method / variables -->

SCHEDULER table
- 만들려고 하는 모든 column의 type 정보 뽑아내서 create table query를 만들 때 반영
  --> SQLProcessor() 부분에 type과 데이터 최대 길이를 구해주는 checkTypes() 함수 존재
  --> Overloading을 통해서 실행하는 부분을 다르게 설정하는데 JSONArray 데이터가 안들어오는 경우
      checkType()을 실행하지 않음.
  --> SQLDataUtil 클래스를 만들어서 해결
  -->

- JSON data가 아닌 경우에도 SQLProcessor에서 checkType()을 활용할 수 있도록 수정.
  -->

- findEmptyColumns()를 다른 곳으로 옮겨야 하는지 판단.
  --> JSON data 사용하게 되어 있음. 다만 SQL과는 관련 없음. 즉 그냥 DataUtil 안에 overloading function을 만들기
  --> DataUtil로 옮겨놓음. -->

- PointPossible이 없는 데이터가 있음
  --> DB에도 비어있는지 확인. --> 비어 있음. --> 어떤 데이터가 비어있는가를 확인하는 method --> (DONE)
  --> Default 값으로 채우는 모듈 작성 --> 

-